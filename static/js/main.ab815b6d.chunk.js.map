{"version":3,"sources":["hooks/useLocalStorage.js","hooks/useFetch.js","components/tagList.js","components/addToFavorites.js","components/feed.js","utils.js","components/pagination.js","components/loading.js","components/errorMessage.js","components/popularTags.js","contexts/currentUser.js","components/feedToggler.js","pages/globalFeed/index.js","pages/article/index.js","components/backendErrorMessages.js","components/articleForm.js","pages/createArticle/index.js","pages/editArticle/index.js","pages/authentication/index.js","pages/tagFeed/index.js","pages/yourFeed/index.js","pages/settings/index.js","components/userArticles.js","pages/userProfile/index.js","routes.js","components/topBar.js","components/currentUserChecker.js","index.js"],"names":["key","initialValue","useState","localStorage","getItem","value","setValue","useEffect","setItem","url","isLoading","setIsLoading","response","setResponse","error","setError","options","setOptions","useLocalStorage","token","doFetch","useCallback","skipGetResponseAfterDestroy","requestOptions","headers","authorization","axios","then","res","data","catch","TagList","tags","className","map","tag","AddToFavorites","isFavorited","favoritesCount","articleSlug","apiUrl","useFetch","favoritesCountWithResponse","article","isFavoritedWithResponse","favorited","buttonClasses","classNames","btn","onClick","event","preventDefault","method","Feed","articles","index","to","author","username","src","image","alt","createdAt","slug","title","description","tagList","getPaginator","search","parsedSearch","parse","currentPage","page","Number","offset","PaginationItem","liClasses","active","Pagination","start","end","total","limit","pagesCount","Math","ceil","pages","Array","keys","el","Loading","ErrorMessage","PopularTags","initialState","isLoggedIn","currentUser","reducer","state","action","type","payload","CurrentUserContext","createContext","CurrentUserProvider","children","useReducer","Provider","FeedToggle","tagName","useContext","currentUserState","exact","GlobalFeed","location","match","stringifiedParams","stringify","articlesCount","Article","props","params","fetchArticleResponse","fetchArticleError","fetchArticleIsLoading","deleteArticleResponse","doDeleteArticle","isSuccessfulDelete","setIsSuccessfulDelete","body","BackendErrorMessages","backendErrors","errorMessages","Object","name","messages","join","errorMessage","ArticleForm","onSubmit","errors","initialValues","setTitle","setBody","setDescription","setTagList","console","log","placeholder","onChange","e","target","rows","CreateArticle","isSuccessfulSubmit","setIsSuccessfulSubmit","EditArticle","doFetchArticle","updateArticleResponse","updateArticleError","doUpdateArticle","setInitialValues","Authentication","isLogin","path","pageTitle","descriptionLink","descriptionText","email","setEmail","password","setPassword","setUsername","setToken","dispatch","user","disabled","TagFeed","YourFeed","Settings","setImage","bio","setBio","isSuccessfulLogout","setIsSuccessfulLogout","UserArticles","isFavorites","getApiUrl","urrentPage","UserProfile","pathname","includes","profile","component","TopBar","CurrentUserChecker","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab815b6d.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nexport default  (key, initialValue= '') => {\r\n  const [value, setValue] = useState(() => {\r\n    return localStorage.getItem(key) || initialValue\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, value)\r\n  }, [value, key]);\r\n\r\n  return [value, setValue];\r\n}\r\n","import { useEffect, useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport useLocalStorage from './useLocalStorage';\r\n\r\nexport default url => {\r\n  const baseUrl = 'https://conduit.productionready.io/api';\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [response, setResponse] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [options, setOptions] = useState({});\r\n  const [token] = useLocalStorage('token');\r\n\r\n  const doFetch = useCallback((options = {}) => {\r\n    setOptions(options);\r\n    setIsLoading(true)\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let skipGetResponseAfterDestroy = false;\r\n    const requestOptions = {\r\n      ...options,\r\n      ...{\r\n        headers: {\r\n          authorization: token ? `Token ${token}` : ''\r\n        }\r\n      }\r\n    };\r\n    if (!isLoading) {\r\n      return\r\n    }\r\n    axios(baseUrl + url, requestOptions)\r\n    .then(res => {\r\n      if (!skipGetResponseAfterDestroy) {\r\n        setIsLoading(false);\r\n        setResponse(res.data)\r\n      }\r\n    })\r\n    .catch(error => {\r\n      if (!skipGetResponseAfterDestroy) {\r\n        setIsLoading(false);\r\n        setError(error.response.data)\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      skipGetResponseAfterDestroy = true\r\n    }\r\n  }, [token, isLoading, options, url]);\r\n\r\n  return [{isLoading, response, error}, doFetch]\r\n}\r\n","import React from 'react';\r\n\r\nconst TagList = ({tags}) => {\r\n  return (\r\n    <ul className='tag-list'>\r\n      {tags.map(tag => (\r\n        <li key={tag} className='tag-default tag-pill tag-outline'>\r\n          {tag}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n};\r\n\r\nexport default TagList;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport useFetch from '../hooks/useFetch';\r\n\r\nconst AddToFavorites = ({isFavorited, favoritesCount, articleSlug}) => {\r\n  const apiUrl = `/articles/${articleSlug}/favorite`;\r\n  const [{response}, doFetch] = useFetch(apiUrl);\r\n  const favoritesCountWithResponse = response\r\n    ? response.article.favoritesCount\r\n    : favoritesCount;\r\n  const isFavoritedWithResponse = response\r\n    ? response.article.favorited\r\n    : isFavorited;\r\n  const buttonClasses = classNames({\r\n    btn: true,\r\n    'btn-sm': true,\r\n    'btn-primary': isFavoritedWithResponse,\r\n    'btn-outline-primary': !isFavoritedWithResponse\r\n  });\r\n\r\n  const handleLike = event => {\r\n    event.preventDefault();\r\n    doFetch({\r\n      method: isFavoritedWithResponse ? 'delete' : 'post'\r\n    })\r\n  };\r\n\r\n  return (\r\n    <button className={buttonClasses} onClick={handleLike}>\r\n      <i className='ion-heart' />\r\n      <span>&nbsp; {favoritesCountWithResponse}</span>\r\n    </button>\r\n  )\r\n};\r\n\r\nexport default AddToFavorites;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport TagList from './tagList';\r\nimport AddToFavorites from './addToFavorites';\r\n\r\nconst Feed = ({articles}) => {\r\n  return (\r\n    <div>\r\n      {articles.map((article, index) => (\r\n        <div className='article-preview' key={index}>\r\n          <div className='article-meta'>\r\n            <Link to={`/profiles/${article.author.username}`}>\r\n              <img src={article.author.image} alt=\"\"/>\r\n            </Link>\r\n            <div className='info'>\r\n              <Link\r\n                to={`/profiles/${article.author.username}`}\r\n                className='author'\r\n              >\r\n                {article.author.username}\r\n              </Link>\r\n              <span className='date'>{article.createdAt}</span>\r\n            </div>\r\n            <div className='pull-xs-right'>\r\n              <AddToFavorites\r\n                isFavorited={article.favorited}\r\n                favoritesCount={article.favoritesCount}\r\n                articleSlug={article.slug}\r\n              />\r\n            </div>\r\n          </div>\r\n          <Link to={`/articles/${article.slug}`} className='preview-link'>\r\n            <h1>{article.title}</h1>\r\n            <p>{article.description}</p>\r\n            <span>Read more...</span>\r\n            <TagList tags={article.tagList} />\r\n          </Link>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Feed;\r\n","import {parse} from 'query-string';\r\n\r\nexport const range = (start, end) => {\r\n  return [...Array(end).keys()].map(el => el + start)\r\n};\r\n\r\nexport const limit =  10;\r\n\r\nexport const getPaginator = search => {\r\n  const parsedSearch = parse(search);\r\n  const currentPage = parsedSearch.page ? Number(parsedSearch.page) : 1;\r\n  const offset = currentPage * 10 - limit; // 3 * 10 - 10 = 20\r\n\r\n  return {currentPage, offset}\r\n};","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\n\r\nimport {range} from '../utils';\r\n\r\nconst PaginationItem = ({page, currentPage, url}) => {\r\n  const liClasses = classNames({\r\n    'page-item': true,\r\n    active: currentPage === page\r\n  });\r\n\r\n  return (\r\n    <li className={liClasses}>\r\n      <Link to={`${url}?page=${page}`} className='page-link'>\r\n        {page}\r\n      </Link>\r\n    </li>\r\n  )\r\n};\r\n\r\nconst Pagination = ({ total, limit, url, currentPage }) => {\r\n  const pagesCount = Math.ceil(total / limit);\r\n  const pages = range(1, pagesCount);\r\n\r\n  return (\r\n    <ul className='pagination'>\r\n      {pages.map(page => (\r\n        <PaginationItem\r\n          page={page}\r\n          currentPage={currentPage}\r\n          url={url}\r\n          key={page}\r\n        />\r\n      ))}\r\n    </ul>\r\n  )\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div>\r\n      Loading...\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <div>\r\n      Something went wrong\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport useFetch from '../hooks/useFetch';\r\nimport Loading from './loading';\r\nimport ErrorMessage from './errorMessage';\r\n\r\nconst PopularTags = () => {\r\n  const [{response, isLoading, error}, doFetch] = useFetch('/tags');\r\n\r\n  useEffect(() => {\r\n    doFetch()\r\n  }, [doFetch]);\r\n\r\n  if (isLoading || !response) {\r\n    return <Loading/>\r\n  }\r\n\r\n  if (error) {\r\n    return <ErrorMessage/>\r\n  }\r\n\r\n  return (\r\n    <div className='sidebar'>\r\n      <p>Popular Tags</p>\r\n      <div className=\"tag-list\">\r\n        {response.tags.map(tag => (\r\n          <Link to={`/tags/${tag}`} className='tag-default tag-pill' key={tag}>\r\n            {tag}\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default PopularTags;\r\n","import React, { createContext, useReducer } from 'react';\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  isLoggedIn: null,\r\n  currentUser: null\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'LOADING':\r\n      return {...state, isLoading: true};\r\n    case 'SET_AUTHORIZED':\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        isLoading: false,\r\n        currentUser: action.payload\r\n      };\r\n    case 'SET_UNAUTHORIZED':\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...initialState,\r\n        isLoggedIn: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const CurrentUserContext = createContext();\r\n\r\nexport const CurrentUserProvider = ({children}) => {\r\n  const value = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={value}>\r\n      {children}\r\n    </CurrentUserContext.Provider>\r\n  )\r\n};\r\n","import React, {useContext} from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport {CurrentUserContext} from '../contexts/currentUser';\r\n\r\nconst FeedToggle = ({tagName}) => {\r\n  const [currentUserState] = useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <div className='feed-toggle'>\r\n      <ul className='nav nav-pills outline-active'>\r\n        {currentUserState.isLoggedIn && (\r\n          <li className='nav-item'>\r\n            <NavLink to='/feed' className='nav-link'>\r\n              Your feed\r\n            </NavLink>\r\n          </li>\r\n        )}\r\n        <li className='nav-item'>\r\n          <NavLink to='/' className='nav-link' exact>\r\n            Global feed\r\n          </NavLink>\r\n        </li>\r\n          {tagName && (\r\n            <li className='nav-item'>\r\n              <NavLink to={`/tags/${tagName}`} className='nav-link' exact>\r\n                <i className='ion-pound' />\r\n                {tagName}\r\n              </NavLink>\r\n            </li>\r\n          )}\r\n      </ul>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default FeedToggle;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport {stringify} from 'query-string';\r\n\r\nimport useFetch from '../../hooks/useFetch';\r\nimport Feed from '../../components/feed';\r\nimport Pagination from '../../components/pagination';\r\nimport {getPaginator, limit} from '../../utils';\r\nimport PopularTags from '../../components/popularTags';\r\nimport Loading from '../../components/loading';\r\nimport ErrorMessage from '../../components/errorMessage';\r\nimport FeedToggle from '../../components/feedToggler';\r\n\r\nconst GlobalFeed = ({location, match}) => {\r\n  const {offset, currentPage} = getPaginator(location.search);\r\n  const stringifiedParams = stringify({\r\n    limit,\r\n    offset\r\n  });\r\n  const apiUrl = `/articles?${stringifiedParams}`;\r\n  const [{response, isLoading, error}, doFetch] = useFetch(apiUrl);\r\n  const url = match.url;\r\n\r\n  useEffect(() => {\r\n    doFetch()\r\n  }, [doFetch, currentPage]);\r\n\r\n  return (\r\n    <div className='home-page'>\r\n      <div className=\"banner\">\r\n        <div className=\"container\">\r\n          <h1>Blog</h1>\r\n          <p>A place to update knowledge</p>\r\n        </div>\r\n      </div>\r\n      <div className='container page'>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-9\">\r\n            <FeedToggle />\r\n            {isLoading && <Loading/>}\r\n            {error && <ErrorMessage/>}\r\n            {!isLoading && response && (\r\n              <Fragment>\r\n                <Feed articles={response.articles} />\r\n                <Pagination\r\n                  total={response.articlesCount}\r\n                  limit={limit}\r\n                  url={url}\r\n                  currentPage={currentPage} />\r\n              </Fragment>\r\n              )}\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <PopularTags/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GlobalFeed;\r\n","import React, { useEffect, useContext, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport useFetch from '../../hooks/useFetch';\r\nimport { CurrentUserContext } from '../../contexts/currentUser';\r\nimport Loading from '../../components/loading';\r\nimport ErrorMessage from '../../components/errorMessage';\r\nimport TagList from '../../components/tagList';\r\n\r\nconst Article = props => {\r\n  const slug = props.match.params.slug;\r\n  const apiUrl = `/articles/${slug}`;\r\n  const [\r\n    {\r\n      response: fetchArticleResponse,\r\n      error: fetchArticleError,\r\n      isLoading: fetchArticleIsLoading\r\n    },\r\n    doFetch\r\n  ] = useFetch(apiUrl);\r\n  const [{response: deleteArticleResponse}, doDeleteArticle] = useFetch(apiUrl);\r\n  const [currentUserState] = useContext(CurrentUserContext);\r\n  const [isSuccessfulDelete, setIsSuccessfulDelete] = useState(false);\r\n\r\n  const isAuthor = () => {\r\n    if (!fetchArticleResponse || !currentUserState.isLoggedIn) {\r\n      return false\r\n    }\r\n\r\n    return (\r\n      fetchArticleResponse.article.author.username === currentUserState.currentUser.username\r\n    )\r\n  };\r\n\r\n  const deleteArticle = () => {\r\n    doDeleteArticle({\r\n      method: 'delete'\r\n    })\r\n  };\r\n\r\n  useEffect(() => {\r\n    doFetch()\r\n  }, [doFetch]);\r\n\r\n  useEffect(() => {\r\n    if (!deleteArticleResponse) {\r\n      return\r\n    }\r\n\r\n    setIsSuccessfulDelete(true)\r\n  }, [deleteArticleResponse]);\r\n\r\n  if (isSuccessfulDelete) {\r\n    return <Redirect to='/' />\r\n  }\r\n\r\n  return (\r\n    <div className='article-page'>\r\n      <div className='banner'>\r\n        {!fetchArticleIsLoading && fetchArticleResponse && (\r\n          <div className='container'>\r\n            <h1>{fetchArticleResponse.article.title}</h1>\r\n            <div className='article-meta'>\r\n              <Link to={`/profiles/${fetchArticleResponse.article.author.username}`}>\r\n                <img src={fetchArticleResponse.article.author.image} alt=\"\"/>\r\n              </Link>\r\n              <div className='info'>\r\n                <Link to={`/profiles/${fetchArticleResponse.article.author.username}`}>\r\n                  {fetchArticleResponse.article.author.username}\r\n                </Link>\r\n                <span className='date'>{fetchArticleResponse.article.createdAt}</span>\r\n              </div>\r\n              {isAuthor() && (\r\n                <span>\r\n                  <Link\r\n                    className='btn btn-outline-secondary btn-sm'\r\n                    to={`/articles/${fetchArticleResponse.article.slug}/edit`}\r\n                  >\r\n                    <i className='ion-edit' />\r\n                    Edit Article\r\n                  </Link>\r\n                  <button\r\n                    className='btn btn-outline-danger btn-sm'\r\n                    onClick={deleteArticle}\r\n                  >\r\n                    <i className='ion-trash-a' />\r\n                    Delete Article\r\n                  </button>\r\n                </span>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className='container page'>\r\n        {fetchArticleIsLoading && <Loading/>}\r\n        {fetchArticleError && <ErrorMessage/>}\r\n        {!fetchArticleIsLoading && fetchArticleResponse && (\r\n          <div className='row article-content'>\r\n            <div className='col-xs-12'>\r\n              <div>\r\n                <p>{fetchArticleResponse.article.body}</p>\r\n              </div>\r\n              <TagList tags={fetchArticleResponse.article.tagList} />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Article;\r\n","import React from 'react';\r\n\r\nconst BackendErrorMessages = ({backendErrors}) => {\r\n  const errorMessages = Object.keys(backendErrors).map(name => {\r\n    const messages = backendErrors[name].join(' ');\r\n    return `${name} ${messages}`\r\n  });\r\n\r\n  return (\r\n    <ul className='error-messages'>\r\n      {errorMessages.map(errorMessage => (\r\n        <li key={errorMessage}>{errorMessage}</li>\r\n      ))}\r\n    </ul>\r\n  )\r\n};\r\n\r\nexport default BackendErrorMessages;\r\n","import React, { useEffect, useState } from 'react';\r\nimport BackendErrorMessages from './backendErrorMessages';\r\n\r\nconst ArticleForm = ({onSubmit, errors, initialValues}) => {\r\n  const [title, setTitle] = useState('');\r\n  const [body, setBody] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [tagList, setTagList] = useState('');\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    const article = {\r\n      title,\r\n      body,\r\n      description,\r\n      tagList\r\n    };\r\n    onSubmit(article);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!initialValues) {\r\n      return\r\n    }\r\n    console.log('initial values', initialValues);\r\n    setTitle(initialValues.title);\r\n    setDescription(initialValues.description);\r\n    setBody(initialValues.body);\r\n    setTagList(initialValues.tagList.join(' '));\r\n  },[initialValues]);\r\n\r\n  return (\r\n    <div className='editor-page'>\r\n      <div className='container page'>\r\n        <div className='row'>\r\n          <div className='col-md-10 offset-md-1 col-xs-12'>\r\n            {errors && <BackendErrorMessages backendErrors={errors} />}\r\n            <form onSubmit={handleSubmit}>\r\n              <fieldset>\r\n                <fieldset className='form-group'>\r\n                  <input\r\n                    type='text'\r\n                    className='form-control form-control-lg'\r\n                    placeholder='Article title'\r\n                    value={title}\r\n                    onChange={e => setTitle(e.target.value)}\r\n                  />\r\n                </fieldset>\r\n                <fieldset className='form-group'>\r\n                  <input\r\n                    type='text'\r\n                    className='form-control form-control-lg'\r\n                    placeholder='What is this article about?'\r\n                    value={description}\r\n                    onChange={e => setDescription(e.target.value)}\r\n                  />\r\n                </fieldset>\r\n                <fieldset className='form-group'>\r\n                  <textarea\r\n                    className='form-control'\r\n                    rows='8'\r\n                    placeholder='Write your article (in markdown)'\r\n                    value={body}\r\n                    onChange={e => setBody(e.target.value)}\r\n                  />\r\n                </fieldset>\r\n                <fieldset className='form-group'>\r\n                  <input\r\n                    type='text'\r\n                    className='form-control form-control-lg'\r\n                    placeholder='Enter tags'\r\n                    value={tagList}\r\n                    onChange={e => setTagList(e.target.value)}\r\n                  />\r\n                </fieldset>\r\n                <fieldset className='form-group'>\r\n                  <button type='submit' className='btn btn-lg pull-xs-right btn-primary'>\r\n                    Publish Article\r\n                  </button>\r\n                </fieldset>\r\n              </fieldset>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ArticleForm;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport ArticleForm from '../../components/articleForm';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport {CurrentUserContext} from '../../contexts/currentUser';\r\n\r\nconst CreateArticle = () => {\r\n  const apiUrl = '/articles';\r\n  const [{response, error}, doFetch] = useFetch(apiUrl);\r\n  const [currentUserState] = useContext(CurrentUserContext);\r\n  const initialValues = {\r\n    title: '',\r\n    description: '',\r\n    body: '',\r\n    tagList: []\r\n  };\r\n  const [isSuccessfulSubmit, setIsSuccessfulSubmit] = useState(false);\r\n  const handleSubmit = article => {\r\n    console.log('handleSubmit', article);\r\n    doFetch({\r\n      method: 'post',\r\n      data: {\r\n        article\r\n      }\r\n    })\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!response) {\r\n      return\r\n    }\r\n\r\n    setIsSuccessfulSubmit(true)\r\n  }, [response]);\r\n\r\n  if (currentUserState.isLoggedIn === false) {\r\n    return <Redirect to='/' />\r\n  }\r\n\r\n  if(isSuccessfulSubmit) {\r\n    return <Redirect to={`/articles/${response.article.slug}`} />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ArticleForm\r\n        errors={(error && error.errors) || {}}\r\n        initialValues={initialValues}\r\n        onSubmit={handleSubmit}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default CreateArticle;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport ArticleForm from '../../components/articleForm';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport { CurrentUserContext } from '../../contexts/currentUser';\r\n\r\nconst EditArticle = ({match}) => {\r\n  const [currentUserState] = useContext(CurrentUserContext);\r\n  const slug = match.params.slug;\r\n  const apiUrl = `/articles/${slug}`;\r\n  const [{response: fetchArticleResponse}, doFetchArticle] = useFetch(apiUrl);\r\n  const [\r\n    {response: updateArticleResponse, error: updateArticleError},\r\n    doUpdateArticle\r\n  ] = useFetch(apiUrl);\r\n  const [initialValues, setInitialValues] = useState(null);\r\n  const [isSuccessfulSubmit, setIsSuccessfulSubmit] = useState(false);\r\n\r\n  const handleSubmit = article => {\r\n    console.log('handleSubmit', article);\r\n    doUpdateArticle({\r\n      method: 'put',\r\n      data: {\r\n        article\r\n      }\r\n    })\r\n  };\r\n\r\n  useEffect(() => {\r\n    doFetchArticle()\r\n  }, [doFetchArticle]);\r\n\r\n  useEffect(() => {\r\n    if (!fetchArticleResponse) {\r\n      return\r\n    }\r\n\r\n    setInitialValues({\r\n      title: fetchArticleResponse.article.title,\r\n      description: fetchArticleResponse.article.description,\r\n      body: fetchArticleResponse.article.body,\r\n      tagList: fetchArticleResponse.article.tagList\r\n    })\r\n  }, [fetchArticleResponse]);\r\n\r\n  useEffect(() => {\r\n    if (!updateArticleResponse) {\r\n      return\r\n    }\r\n\r\n    setIsSuccessfulSubmit(true)\r\n  }, [updateArticleResponse]);\r\n\r\n  if (currentUserState.isLoggedIn === false) {\r\n    return <Redirect to='/' />\r\n  }\r\n\r\n  if (isSuccessfulSubmit) {\r\n    return <Redirect to={`/articles/${slug}`} />\r\n  }\r\n\r\n  return (\r\n    <ArticleForm\r\n      onSubmit={handleSubmit}\r\n      errors={(updateArticleError && updateArticleError.errors) || {}}\r\n      initialValues={initialValues}\r\n    />\r\n  )\r\n};\r\n\r\nexport default EditArticle;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport useLocalStorage from \"../../hooks/useLocalStorage\";\r\nimport { CurrentUserContext } from \"../../contexts/currentUser\";\r\nimport BackendErrorMessages from \"../../components/backendErrorMessages\";\r\n\r\nconst Authentication = (props) => {\r\n  const isLogin = props.match.path === \"/login\";\r\n  const pageTitle = isLogin ? \"Sign In\" : \"Sign Up\";\r\n  const descriptionLink = isLogin ? \"/register\" : \"/login\";\r\n  const descriptionText = isLogin ? \"Need an account?\" : \"Have an account?\";\r\n  const apiUrl = isLogin ? \"/users/login\" : \"/users\";\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [isSuccessfulSubmit, setIsSuccessfulSubmit] = useState(false);\r\n  const [{ response, isLoading, error }, doFetch] = useFetch(apiUrl);\r\n  const [, setToken] = useLocalStorage(\"token\");\r\n  const [, dispatch] = useContext(CurrentUserContext);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const user = isLogin ? { email, password } : { email, password, username };\r\n    doFetch({\r\n      method: \"post\",\r\n      data: {\r\n        user,\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!response) {\r\n      return;\r\n    }\r\n    setToken(response.user.token);\r\n    setIsSuccessfulSubmit(true);\r\n    dispatch({ type: \"SET_AUTHORIZED\", payload: response.user });\r\n  }, [response, setToken, dispatch]);\r\n\r\n  if (isSuccessfulSubmit) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"auth-page\">\r\n      <div className=\"container page\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 offset-md-3 col-xs-12\">\r\n            <h1 className=\"text-xs-center\">{pageTitle}</h1>\r\n            <p className=\"text-xs-center\">\r\n              <Link to={descriptionLink}>{descriptionText}</Link>\r\n            </p>\r\n            <form onSubmit={handleSubmit}>\r\n              {error && <BackendErrorMessages backendErrors={error.errors} />}\r\n              <fieldset>\r\n                <div>\r\n                  <h5>\r\n                    <strong>Account for testing: </strong>\r\n                  </h5>\r\n                  <p>\r\n                    <strong>Email:</strong> 2dwqdedwe@mail.com <br />\r\n                    <strong>Password:</strong> 2dwqdedwe@dcscwewed.ewdwewe\r\n                  </p>\r\n                </div>\r\n                {!isLogin && (\r\n                  <fieldset className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control form-control-lg\"\r\n                      placeholder=\"Username\"\r\n                      value={username}\r\n                      onChange={(e) => setUsername(e.target.value)}\r\n                    />\r\n                  </fieldset>\r\n                )}\r\n                <fieldset className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </fieldset>\r\n                <fieldset className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                </fieldset>\r\n                <button\r\n                  className=\"btn btn-lg btn-primary pull-xs-right\"\r\n                  type=\"submit\"\r\n                  disabled={isLoading}\r\n                >\r\n                  {pageTitle}\r\n                </button>\r\n              </fieldset>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Authentication;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport {stringify} from 'query-string';\r\n\r\nimport useFetch from '../../hooks/useFetch';\r\nimport Feed from '../../components/feed';\r\nimport Pagination from '../../components/pagination';\r\nimport {getPaginator, limit} from '../../utils';\r\nimport PopularTags from '../../components/popularTags';\r\nimport Loading from '../../components/loading';\r\nimport ErrorMessage from '../../components/errorMessage';\r\nimport FeedToggle from '../../components/feedToggler';\r\n\r\nconst TagFeed = ({location, match}) => {\r\n  const tagName = match.params.slug;\r\n  const {offset, currentPage} = getPaginator(location.search);\r\n  const stringifiedParams = stringify({\r\n    limit,\r\n    offset,\r\n    tag: tagName\r\n  });\r\n  const apiUrl = `/articles?${stringifiedParams}`;\r\n  const [{response, isLoading, error}, doFetch] = useFetch(apiUrl);\r\n  const url = match.url;\r\n\r\n  useEffect(() => {\r\n    doFetch()\r\n  }, [doFetch, currentPage, tagName]);\r\n\r\n  return (\r\n    <div className='home-page'>\r\n      <div className=\"banner\">\r\n        <div className=\"container\">\r\n          <h1>Blog</h1>\r\n          <p>A place to update knowledge</p>\r\n        </div>\r\n      </div>\r\n      <div className='container page'>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-9\">\r\n            <FeedToggle tagName={tagName} />\r\n            {isLoading && <Loading/>}\r\n            {error && <ErrorMessage/>}\r\n            {!isLoading && response && (\r\n              <Fragment>\r\n                <Feed articles={response.articles} />\r\n                <Pagination\r\n                  total={response.articlesCount}\r\n                  limit={limit}\r\n                  url={url}\r\n                  currentPage={currentPage} />\r\n              </Fragment>\r\n              )}\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <PopularTags/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagFeed;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport {stringify} from 'query-string';\r\n\r\nimport useFetch from '../../hooks/useFetch';\r\nimport Feed from '../../components/feed';\r\nimport Pagination from '../../components/pagination';\r\nimport {getPaginator, limit} from '../../utils';\r\nimport PopularTags from '../../components/popularTags';\r\nimport Loading from '../../components/loading';\r\nimport ErrorMessage from '../../components/errorMessage';\r\nimport FeedToggle from '../../components/feedToggler';\r\n\r\nconst YourFeed = ({location, match}) => {\r\n  const tagName = match.params.slug;\r\n  const {offset, currentPage} = getPaginator(location.search);\r\n  const stringifiedParams = stringify({\r\n    limit,\r\n    offset\r\n  });\r\n  const apiUrl = `/articles/feed?${stringifiedParams}`;\r\n  const [{response, isLoading, error}, doFetch] = useFetch(apiUrl);\r\n  const url = match.url;\r\n\r\n  useEffect(() => {\r\n    doFetch()\r\n  }, [doFetch, currentPage, tagName]);\r\n\r\n  return (\r\n    <div className='home-page'>\r\n      <div className=\"banner\">\r\n        <div className=\"container\">\r\n          <h1>Blog</h1>\r\n          <p>A place to update knowledge</p>\r\n        </div>\r\n      </div>\r\n      <div className='container page'>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-9\">\r\n            <FeedToggle tagName={tagName} />\r\n            {isLoading && <Loading/>}\r\n            {error && <ErrorMessage/>}\r\n            {!isLoading && response && (\r\n              <Fragment>\r\n                <Feed articles={response.articles} />\r\n                <Pagination\r\n                  total={response.articlesCount}\r\n                  limit={limit}\r\n                  url={url}\r\n                  currentPage={currentPage} />\r\n              </Fragment>\r\n              )}\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <PopularTags/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default YourFeed;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport useFetch from '../../hooks/useFetch';\r\nimport useLocalStorage from '../../hooks/useLocalStorage';\r\nimport {CurrentUserContext} from '../../contexts/currentUser';\r\nimport BackendErrorMessages from '../../components/backendErrorMessages';\r\n\r\nconst Settings = () => {\r\n  const [currentUserState, dispatch] = useContext(CurrentUserContext);\r\n  const apiUrl = '/user';\r\n  const [{response, error}, doFetch] = useFetch(apiUrl);\r\n  const [image, setImage] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [bio, setBio] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isSuccessfulLogout, setIsSuccessfulLogout] = useState(false);\r\n  const [, setToken] = useLocalStorage('token');\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    doFetch({\r\n      method: 'put',\r\n      data: {\r\n        user: {\r\n          ...currentUserState.currentUser,\r\n          image,\r\n          username,\r\n          bio,\r\n          email,\r\n          password\r\n        }\r\n      }\r\n    })\r\n  };\r\n  const logout = event => {\r\n    event.preventDefault();\r\n    setToken('');\r\n    dispatch({type: 'LOGOUT'})\r\n    setIsSuccessfulLogout(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!currentUserState.currentUser) {\r\n      return\r\n    }\r\n\r\n    setImage(currentUserState.currentUser.image);\r\n    setUsername(currentUserState.currentUser.username);\r\n    setBio(currentUserState.currentUser.bio);\r\n    setEmail(currentUserState.currentUser.email);\r\n  }, [currentUserState.currentUser]);\r\n\r\n  useEffect(() => {\r\n    if (!response) {\r\n      return\r\n    }\r\n\r\n    dispatch({type: 'SET_AUTHORIZED', payload: response.user})\r\n  }, [response, dispatch]);\r\n\r\n  if (isSuccessfulLogout) {\r\n    return <Redirect to='/' />\r\n  }\r\n\r\n  return (\r\n    <div className='settings-page'>\r\n      <div className='container page'>\r\n        <div className='row'>\r\n          <div className='col-md-6 offset-md-3 col-xs-12'>\r\n            <h1 className='text-xs-center'>Your settings</h1>\r\n            {error && <BackendErrorMessages backendErrors={error.errors} />}\r\n            <form onSubmit={handleSubmit}>\r\n              <fieldset>\r\n                <fieldset className='form-group'>\r\n                  <input\r\n                    type=\"text\"\r\n                    className='form-control form-control-lg'\r\n                    placeholder='URL of profile picture'\r\n                    value={image}\r\n                    onChange={e => setImage(e.target.value)}\r\n                  />\r\n                </fieldset>\r\n                <fieldset className='form-group'>\r\n                  <input\r\n                    type='text'\r\n                    className='form-control form-control-lg'\r\n                    placeholder='Username'\r\n                    value={username}\r\n                    onChange={e => setUsername(e.target.value)}\r\n                  />\r\n                </fieldset>\r\n                <fieldset className='form-group'>\r\n                  <textarea\r\n                    className='form-control form-control-lg'\r\n                    rows='8'\r\n                    placeholder='Short bio'\r\n                    value={bio}\r\n                    onChange={e => setBio(e.target.value)}\r\n                  />\r\n                </fieldset>\r\n                <fieldset className='form-group'>\r\n                  <input\r\n                    type='text'\r\n                    className='form-control form-control-lg'\r\n                    placeholder='Email'\r\n                    value={email}\r\n                    onChange={e => setEmail(e.target.value)}\r\n                  />\r\n                </fieldset>\r\n                <fieldset className='form-group'>\r\n                  <input\r\n                    type='password'\r\n                    className='form-control form-control-lg'\r\n                    placeholder='Password'\r\n                    value={password}\r\n                    onChange={e => setPassword(e.target.value)}\r\n                  />\r\n                </fieldset>\r\n                <button\r\n                  type='submit'\r\n                  className='btn btn-lg btn-primary pull-xs-right'\r\n                >\r\n                  Update settings\r\n                </button>\r\n              </fieldset>\r\n            </form>\r\n            <hr/>\r\n            <button\r\n              className='btn btn-outline-danger'\r\n              onClick={logout}\r\n            >\r\n              Or click here to logout\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Settings;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { stringify } from 'query-string';\r\n\r\nimport {getPaginator, limit} from '../utils';\r\nimport useFetch from '../hooks/useFetch';\r\nimport Loading from './loading';\r\nimport ErrorMessage from './errorMessage';\r\nimport Feed from './feed';\r\nimport Pagination from './pagination';\r\n\r\nconst getApiUrl = ({username, offset, isFavorites}) => {\r\n  const params = isFavorites\r\n    ? {limit, offset, favorited: username}\r\n    : {limit, offset, author: username};\r\n\r\n    return `/articles?${stringify(params)}`\r\n};\r\n\r\nconst UserArticles = ({username, location, isFavorites, url}) => {\r\n  const {offset, currentPage} = getPaginator(location.search);\r\n  const apiUrl = getApiUrl({username, offset, isFavorites});\r\n  const [{response, isLoading, error}, doFetch] = useFetch(apiUrl);\r\n\r\n  useEffect(() => {\r\n    doFetch()\r\n  }, [doFetch, isFavorites, offset]);\r\n\r\n  return (\r\n    <div>\r\n      {isLoading && <Loading/>}\r\n      {error && <ErrorMessage/>}\r\n      {!isLoading && response && (\r\n        <Fragment>\r\n          <Feed articles={response.articles} />\r\n          <Pagination\r\n            total={response.articlesCount}\r\n            limit={limit}\r\n            url={url}\r\n            urrentPage={currentPage}\r\n          />\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default UserArticles;\r\n","import React, { useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport useFetch from '../../hooks/useFetch';\r\nimport UserArticles from '../../components/userArticles'\r\n\r\nconst UserProfile = ({location, match}) => {\r\n  const slug = match.params.slug;\r\n  const isFavorites = location.pathname.includes('favorites');\r\n  const apiUrl = `/profiles/${slug}`;\r\n  const [{response}, doFetch] = useFetch(apiUrl);\r\n\r\n  useEffect(() => {\r\n    doFetch()\r\n  }, [doFetch]);\r\n\r\n  if (!response) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className='profile-page'>\r\n      <div className='user-info'>\r\n        <div className='container'>\r\n          <div className='row'>\r\n            <div className='col-xs-12 col-md-10 offset-md-1'>\r\n              <img className='user-img' src={response.profile.image} alt=\"\"/>\r\n              <h4>{response.profile.username}</h4>\r\n              <p>{response.profile.bio}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='container'>\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-md-10 offset-md-1'>\r\n            <div className='articles-toggle'>\r\n              <ul className='nav nav-pills outline-active'>\r\n                <li className='nav-item'>\r\n                  <NavLink\r\n                    to={`/profiles/${response.profile.username}`}\r\n                    className='nav-link'\r\n                    exact\r\n                  >\r\n                    My Posts\r\n                  </NavLink>\r\n                </li>\r\n                <li className='nav-item'>\r\n                  <NavLink\r\n                    to={`/profiles/${response.profile.username}/favorites`}\r\n                    className='nav-link'\r\n                  >\r\n                    Favorites Posts\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          <UserArticles\r\n            username={response.profile.username}\r\n            location={location}\r\n            isFavorites={isFavorites}\r\n            url={match.url}\r\n          />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default UserProfile;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport GlobalFeed from \"./pages/globalFeed\";\r\nimport Article from \"./pages/article\";\r\nimport CreateArticle from \"./pages/createArticle\";\r\nimport EditArticle from \"./pages/editArticle\";\r\nimport Authentication from \"./pages/authentication\";\r\nimport TagFeed from \"./pages/tagFeed\";\r\nimport YourFeed from \"./pages/yourFeed\";\r\nimport Settings from \"./pages/settings\";\r\nimport UserProfile from \"./pages/userProfile\";\r\n\r\nexport default () => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" component={GlobalFeed} exact />\r\n      <Route path=\"/profiles/:slug\" component={UserProfile} exact />\r\n      <Route path=\"/profiles/:slug/favorites\" component={UserProfile} exact />\r\n      <Route path=\"/settings\" component={Settings} />\r\n      <Route path=\"/article/new\" component={CreateArticle} />\r\n      <Route path=\"/articles/:slug/edit\" component={EditArticle} />\r\n      <Route path=\"/feed\" component={YourFeed} />\r\n      <Route path=\"/tags/:slug\" component={TagFeed} />\r\n      <Route path=\"/login\" component={Authentication} />\r\n      <Route path=\"/register\" component={Authentication} />\r\n      <Route path=\"/articles/:slug\" component={Article} />\r\n    </Switch>\r\n  );\r\n};\r\n","import React, {useContext, Fragment} from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nimport { CurrentUserContext } from '../contexts/currentUser';\r\n\r\nconst TopBar = () => {\r\n  const [currentUserState] = useContext(CurrentUserContext);\r\n  console.log('currentUserState', currentUserState);\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-light\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          Blog\r\n        </Link>\r\n        <ul className=\"nav navbar-nav pull-xs-right\">\r\n          <li className=\"nav-item\">\r\n            <NavLink to=\"/\" className=\"nav-link\" exact>\r\n              Home\r\n            </NavLink>\r\n          </li>\r\n          {currentUserState.isLoggedIn === false && (\r\n            <Fragment>\r\n              <li className=\"nav-item\">\r\n                <NavLink to=\"/login\" className=\"nav-link\">\r\n                  Sign in\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink to=\"/register\" className=\"nav-link\">\r\n                  Sign up\r\n                </NavLink>\r\n              </li>\r\n            </Fragment>\r\n          )}\r\n          {currentUserState.isLoggedIn && (\r\n            <Fragment>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  to='/article/new'\r\n                  className='nav-link'\r\n                >\r\n                  <i className='ion-compose'/>\r\n                  &nbsp; New Post\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  to='/settings'\r\n                  className='nav-link'\r\n                >\r\n                  <i className='ion-gear-a'/>\r\n                  &nbsp; Settings\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  to={`/profiles/${currentUserState.currentUser.username}`}\r\n                  className='nav-link'\r\n                >\r\n                  <img\r\n                    className='user-pic'\r\n                    src={currentUserState.currentUser.image}\r\n                    alt=\"\"\r\n                  />\r\n                  &nbsp; {currentUserState.currentUser.username}\r\n                </NavLink>\r\n              </li>\r\n            </Fragment>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n","import { useContext, useEffect } from 'react';\r\n\r\nimport useFetch from '../hooks/useFetch';\r\nimport {CurrentUserContext} from '../contexts/currentUser';\r\nimport useLocalStorage from '../hooks/useLocalStorage';\r\n\r\nconst CurrentUserChecker = ({children}) => {\r\n  const [{response}, doFetch] = useFetch('/user');\r\n  const [, dispatch] = useContext(CurrentUserContext);\r\n  const [token] = useLocalStorage('token');\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      dispatch({type: 'SET_UNAUTHORIZED'});\r\n      return\r\n    }\r\n\r\n    doFetch();\r\n    dispatch({type: 'LOADING'});\r\n  },[token, dispatch, doFetch]);\r\n\r\n  useEffect(() => {\r\n    if (!response) {\r\n      return\r\n    }\r\n\r\n    dispatch({type: 'SET_AUTHORIZED', payload: response.user})\r\n  }, [response, dispatch]);\r\n\r\n  return children;\r\n};\r\n\r\nexport default CurrentUserChecker;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport Routes from './routes';\nimport TopBar from './components/topBar';\nimport { CurrentUserProvider } from './contexts/currentUser';\nimport CurrentUserChecker from './components/currentUserChecker';\n\nconst App = () => {\n  return (\n    <CurrentUserProvider>\n      <CurrentUserChecker>\n        <Router>\n          <TopBar/>\n          <Routes/>\n        </Router>\n      </CurrentUserChecker>\n    </CurrentUserProvider>\n  );\n};\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}